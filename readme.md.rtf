{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww28600\viewh15240\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs32 \cf0 Client server model is in the file name as chat.\
\
Open the project in IntelliJ ice with all the project files\
\
For running client-server architecture we have to run two files\
1.server.java\
2.client.java\
\
Before running the client.java, we have to edit the configuration in IntelliJ IDE to run multiple instances simultaneously.\
\
Step1: execute the server.java, once its running successfully\
Step2: run the client.java, run it as many users you need.\
\
For running commands in the client server program , you can execute the command.java\
\
\
Running the peer  to peer architecture:\
\
Open the project P2P in the IntelliJ IDE\
\
Incase if the jfree.jar file is not there, please visit the following link https://www.jfree.org/jfreechart/download.html and download it into the library.\
\
For running peer to peer architecture\
1. Run the create user.java file\
\
When one of the server  says stop the program will automatically generate the graph\
\
For clearing the files such as Usedports.txt, User interests.txt and portmapping.txt run the testing .java file\
\
\
\
\

\fs24 \
}